apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nacos-cluster.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.service.headless.name }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "nacos-cluster.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "nacos-cluster.name" . }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ include "nacos-cluster.name" . }}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nacos
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 8848
          name: client
        - containerPort: 9848
          name: client-rpc
        - containerPort: 9849
          name: raft-rpc
        env:
        - name: MODE
          value: "cluster"
        - name: NACOS_REPLICAS
          value: "{{ .Values.replicaCount }}"
        - name: SERVICE_NAME
          value: "{{ .Values.service.headless.name }}"
        - name: DOMAIN_NAME
          value: "cluster.local"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NACOS_SERVER_PORT
          value: "8848"
        - name: NACOS_APPLICATION_PORT
          value: "8848"
        - name: SPRING_DATASOURCE_PLATFORM
          value: "mysql"
        - name: MYSQL_SERVICE_HOST
          value: "{{ .Values.mysql.host }}"
        - name: MYSQL_SERVICE_PORT
          value: "{{ .Values.mysql.port }}"
        - name: MYSQL_SERVICE_DB_NAME
          value: "{{ .Values.mysql.database }}"
        - name: MYSQL_SERVICE_USER
          value: "{{ .Values.mysql.user }}"
        - name: MYSQL_SERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.passwordSecret.name }}
              key: {{ .Values.mysql.passwordSecret.key }}
        - name: MYSQL_SERVICE_DB_PARAM
          value: "{{ .Values.mysql.params }}"
        - name: JVM_XMS
          value: "{{ .Values.jvm.xms }}"
        - name: JVM_XMX
          value: "{{ .Values.jvm.xmx }}"
        - name: JVM_XMN
          value: "{{ .Values.jvm.xmn }}"
        - name: JVM_MS
          value: "{{ .Values.jvm.ms }}"
        - name: JVM_MMS
          value: "{{ .Values.jvm.mms }}"
        - name: NACOS_DEBUG
          value: "true"
        - name: TOMCAT_ACCESSLOG_ENABLED
          value: "false"
        - name: NACOS_AUTH_ENABLE
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /nacos/v1/console/health/liveness
            port: 8848
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /nacos/v1/console/health/readiness
            port: 8848
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
        volumeMounts:
        - name: nacos-data
          mountPath: /home/nacos/data
        - name: nacos-logs
          mountPath: /home/nacos/logs
        - name: cluster-conf
          mountPath: /home/nacos/conf/cluster.conf
          subPath: cluster.conf
        - name: custom-properties
          mountPath: /home/nacos/conf/custom.properties
          subPath: custom.properties
      volumes:
      - name: cluster-conf
        configMap:
          name: {{ include "nacos-cluster.fullname" . }}-cluster-conf
          items:
          - key: cluster.conf
            path: cluster.conf
      - name: custom-properties
        configMap:
          name: {{ include "nacos-cluster.fullname" . }}-custom-properties
          items:
          - key: custom.properties
            path: custom.properties
  volumeClaimTemplates:
  - metadata:
      name: nacos-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.persistence.storageClassName }}"
      resources:
        requests:
          storage: {{ .Values.persistence.data.size }}
  - metadata:
      name: nacos-logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.persistence.storageClassName }}"
      resources:
        requests:
          storage: {{ .Values.persistence.logs.size }}